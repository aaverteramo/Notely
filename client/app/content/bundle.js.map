{"version":3,"sources":["app.js","components/sign-in.js","components/sign-up.js","components/user-links.js","notes/notes.js","services/auth-interceptor.js","services/auth-token.js","services/current-user.js","services/notes-service.js","services/users-service.js","users/users.js"],"names":[],"mappings":";;;AACA,CAAC,YAAW;;;AAGV,MAAI,GAAG,GAAG,OAAO,CAAC,MAAM,CAAC,QAAQ,EAAE,CACjC,WAAW,EACX,cAAc,EACd,OAAO,CACR,CAAC,CAAC;;AAEH,WAAS,MAAM,CAAC,kBAAkB,EAAE;;AAElC,sBAAkB,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;GACzC;;AAED,QAAM,CAAC,SAAS,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;AAC3C,KAAG,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;;AAEnB,KAAG,CAAC,QAAQ,CAAC,UAAU,EAAE,+BAA+B,CAAC,CAAC;;CAE3D,CAAA,EAAG,CAAC;;;;;;;ACpBL,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC;;CAErB,SAAS,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,cAAc,EAAE,UAAC,MAAM,EAAE,YAAY,EAAK;;;;MAGlE,gBAAgB;AACT,aADP,gBAAgB,GACN;4BADV,gBAAgB;;AAElB,UAAI,CAAC,IAAI,GAAG,EAAE,CAAC;KAChB;;;;iBAHG,gBAAgB;;aAIf,iBAAG;;AAEN,oBAAY,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAC1B,IAAI,CACH,UAAS,QAAQ,EAAE;;AAEjB,gBAAM,CAAC,EAAE,CAAC,YAAY,EAAE,EAAE,MAAM,EAAE,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;SAC7D,EACD,UAAS,QAAQ,EAAE;;AAEjB,iBAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;SAC3B,CAAC,CAAC;OACR;;;WAhBG,gBAAgB;;;AAoBtB,SAAO;;AAEL,SAAK,EAAE,EAAE;AACT,cAAU,EAAE,gBAAgB;;AAE5B,gBAAY,EAAE,MAAM;;AAEpB,oBAAgB,EAAE,IAAI;AACtB,eAAW,EAAE,0BAA0B;GACxC,CAAC;CACH,CAAC,CAAC,CAAC;;;;;;;ACnCN,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC;;CAErB,SAAS,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,cAAc,EAAE,UAAC,MAAM,EAAE,YAAY,EAAK;;;;MAGlE,gBAAgB;AACT,aADP,gBAAgB,GACN;4BADV,gBAAgB;;AAElB,UAAI,CAAC,IAAI,GAAG,EAAE,CAAC;KAChB;;;;iBAHG,gBAAgB;;aAId,kBAAG;;AAEP,oBAAY,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAC3B,IAAI,CACH,UAAS,QAAQ,EAAE;;AAEjB,gBAAM,CAAC,EAAE,CAAC,YAAY,EAAE,EAAE,MAAM,EAAE,SAAS,EAAE,CAAC,CAAC;SAChD,EACD,UAAS,QAAQ,EAAE;;AAEjB,iBAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;SAC3B,CAAC,CAAC;OACR;;;WAhBG,gBAAgB;;;AAoBtB,SAAO;;AAEL,SAAK,EAAE,EAAE;AACT,cAAU,EAAE,gBAAgB;;AAE5B,gBAAY,EAAE,MAAM;;AAEpB,oBAAgB,EAAE,IAAI;AACtB,eAAW,EAAE,0BAA0B;GACxC,CAAC;CACH,CAAC,CAAC,CAAC;;;;;;;ACnCN,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC;;CAErB,SAAS,CAAC,WAAW,EAAE,YAAM;;;MAEtB,mBAAmB;AACZ,aADP,mBAAmB,CACX,SAAS,EAAE,WAAW,EAAE;4BADhC,mBAAmB;;AAErB,UAAI,CAAC,SAAS,GAAG,SAAS,CAAC;AAC3B,UAAI,CAAC,WAAW,GAAG,WAAW,CAAC;KAChC;;iBAJG,mBAAmB;;aAKnB,gBAAG;AACL,eAAO,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC;OAC/B;;;aACO,oBAAG;AACT,eAAO,CAAC,CAAE,IAAI,CAAC,IAAI,EAAE,CAAC,GAAG,AAAC,CAAC;OAC5B;;;WAVG,mBAAmB;;;AAYzB,qBAAmB,CAAC,OAAO,GAAG,CAAC,WAAW,EAAE,aAAa,CAAC,CAAC;;;AAG3D,SAAO;;AAEL,SAAK,EAAE,EAAE;AACT,cAAU,EAAE,mBAAmB;;AAE/B,gBAAY,EAAE,MAAM;;AAEpB,oBAAgB,EAAE,IAAI;;AAEtB,YAAQ,mbAaP;GACF,CAAC;CACH,CAAC,CAAC;;;;AC1CL,CAAC,YAAW;;AAEV,SAAO,CAAC,MAAM,CAAC,cAAc,EAAE,CAC7B,WAAW,EACX,aAAa,EACb,OAAO,CACR,CAAC;;GAEC,MAAM,CAAC,WAAW,CAAC,CAAC;;;AAGrB,aAAW,CAAC,OAAO,GAAG,CAAC,gBAAgB,CAAC,CAAC;;AAEzC,WAAS,WAAW,CAAC,cAAc,EAAE;AACnC,kBAAc;;;KAGX,KAAK,CAAC,OAAO,EAAE;AACd,SAAG,EAAE,QAAQ;;;AAGb,aAAO,EAAE;;;AAGP,mBAAW,EAAE,CAAC,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAE,cAAc,EAAE,aAAa;;;AAIrE,kBAAS,MAAM,EAAE,EAAE,EAAE,QAAQ,EAAE,YAAY,EAAE,WAAW,EAAE;;AAExD,cAAI,QAAQ,GAAG,EAAE,CAAC,KAAK,EAAE,CAAC;AAC1B,kBAAQ,CAAC,YAAW;;AAElB,gBAAI,WAAW,CAAC,UAAU,EAAE,EAAE;;AAE5B,0BAAY,CAAC,KAAK,EAAE,CAAC,IAAI,CACvB,YAAW;;;AAGT,wBAAQ,CAAC,OAAO,EAAE,CAAC;eACpB,EACD,YAAW;;;AAGT,wBAAQ,CAAC,MAAM,EAAE,CAAC;AAClB,sBAAM,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC;eACtB,CACF,CAAC;aACH,MACI;;AAEH,sBAAQ,CAAC,MAAM,EAAE,CAAC;AAClB,oBAAM,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC;aACtB;WACF,CAAC,CAAC;;AAEH,iBAAO,QAAQ,CAAC,OAAO,CAAC;SACzB,CAAC;OACL;;AAED,iBAAW,EAAE,mBAAmB;;AAEhC,gBAAU,EAAE,eAAe;KAC5B,CAAC;;KAED,KAAK,CAAC,YAAY,EAAE;;AAEnB,SAAG,EAAE,UAAU;AACf,iBAAW,EAAE,wBAAwB;AACrC,gBAAU,EAAE,mBAAmB;KAChC,CAAC,CAAA;GACL;;;AAGD,iBAAe,CAAC,OAAO,GAAG,CAAC,QAAQ,EAAE,QAAQ,EAAE,cAAc,CAAC,CAAC;AAC/D,WAAS,eAAe,CAAC,MAAM,EAAE,MAAM,EAAE,YAAY,EAAE;AACrD,UAAM,CAAC,IAAI,GAAG,EAAE,CAAC;;;AAGjB,UAAM,CAAC,KAAK,GAAG,YAAY,CAAC,GAAG,EAAE,CAAC;GACnC;;;AAGD,qBAAmB,CAAC,OAAO,GAAG,CAAC,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,cAAc,CAAC,CAAC;AAC5E,WAAS,mBAAmB,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,YAAY,EAAE;;AAEhE,UAAM,CAAC,IAAI,GAAG,YAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;;;AAG1D,UAAM,CAAC,IAAI,GAAG,YAAW;;AAErB,UAAI,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE;;AAEnB,oBAAY,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CACnC,UAAS,QAAQ,EAAE;;AAEjB,gBAAM,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC/C,eAAK,CAAC,MAAM,CAAC,SAAS,EAAE,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SAChD,EACD,UAAS,QAAQ,EAAE;AACjB,eAAK,CAAC,MAAM,CAAC,QAAQ,EAAE,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SAC/C,CACF,CAAC;OACH,MACI;AACH,YAAI,MAAM,CAAC,IAAI,CAAC,KAAK,IAAI,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE;;AAE9C,sBAAY,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAC7B,IAAI,CAAC,UAAS,QAAQ,EAAE;AACvB,kBAAM,CAAC,EAAE,CAAC,YAAY,EAAE,EAAE,MAAM,EAAE,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;WAC7D,CAAC,CAAC;SACN,MACI;AACH,iBAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;SAClC;OACF;KACJ,CAAC;;AAEF,UAAM,UAAO,GAAG,YAAW;;AAEzB,kBAAY,UAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CACnC,UAAS,QAAQ,EAAE;AACjB,cAAM,CAAC,EAAE,CAAC,YAAY,EAAE,EAAE,MAAM,EAAE,SAAS,EAAE,CAAC,CAAC;AAC/C,aAAK,CAAC,MAAM,CAAC,SAAS,EAAE,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;OAChD,EACD,UAAS,QAAQ,EAAE;AACjB,aAAK,CAAC,MAAM,CAAC,QAAQ,EAAE,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;OAC/C,CACF,CAAC;KACH,CAAC;;AAEF,UAAM,CAAC,UAAU,GAAG,YAAW;AAC7B,aAAO,MAAM,CAAC,IAAI,CAAC,GAAG,GAAG,cAAc,GAAG,MAAM,CAAC;KAClD,CAAC;GACH;;;CAGJ,CAAA,EAAG,CAAC;;;;AC1IL,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,CACrB,OAAO,CAAC,iBAAiB,EAAE,CAAC,WAAW,EAAE,UAAU,EAClD,UAAS,SAAS,EAAE,QAAQ,EAAE;AAC5B,SAAO;;AAEL,WAAO,EAAE,iBAAS,MAAM,EAAE;AACxB,UAAI,KAAK,GAAG,SAAS,CAAC,GAAG,EAAE,CAAC;AAC5B,aAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AACnB,aAAO,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;AACxB,UAAI,KAAK,IAAI,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE;AAC9C,cAAM,CAAC,OAAO,CAAC,eAAe,CAAC,GAAG,KAAK,CAAC;OACzC;AACD,aAAO,MAAM,CAAC;KACf;GACF,CAAC;CACH,CAAC,CAAC,CAAC;;AAER,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC;;CAErB,MAAM,CAAC,CAAC,eAAe,EAAE,UAAS,aAAa,EAAE;;AAEhD,SAAO,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;CAC3D,CAAC,CAAC,CAAC;;;;;;;ACtBN,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC;;;CAGrB,OAAO,CAAC,WAAW,EAAE,CAAC,SAAS,EAAE,UAAC,OAAO,EAAK;MAEvC,SAAS;AACF,aADP,SAAS,GACC;4BADV,SAAS;;;AAGX,UAAI,CAAC,SAAS,GAAG,OAAO,CAAC,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;KAC5D;;;;;;iBAJG,SAAS;;aAMV,aAAC,KAAK,EAAE;AACT,YAAI,CAAC,SAAS,GAAG,KAAK,CAAC;AACvB,eAAO,CAAC,YAAY,CAAC,OAAO,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;OAC3D;;;;;aAEE,eAAG;AACJ,eAAO,IAAI,CAAC,SAAS,IAAI,EAAE,CAAC;OAC7B;;;;;aAEI,iBAAG;AACN,YAAI,CAAC,SAAS,GAAG,SAAS,CAAC;AAC3B,eAAO,CAAC,YAAY,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;OAC9C;;;WAlBG,SAAS;;;AAqBf,SAAO,IAAI,SAAS,EAAE,CAAC;CACxB,CAAC,CAAC,CAAC;;;;;;;AC3BN,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC;;;CAGrB,OAAO,CAAC,aAAa,EAAE,CAAC,SAAS,EAAE,UAAC,OAAO,EAAK;MAEzC,WAAW;AACJ,aADP,WAAW,GACD;4BADV,WAAW;;;AAGb,UAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;KAC5E;;;;;;iBAJG,WAAW;;aAMZ,aAAC,IAAI,EAAE;AACR,YAAI,CAAC,WAAW,GAAG,IAAI,CAAC;AACxB,eAAO,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;OAC/E;;;;;aAEE,eAAG;AACJ,eAAO,IAAI,CAAC,WAAW,IAAI,EAAE,CAAC;OAC/B;;;;;aAEI,iBAAG;AACN,YAAI,CAAC,WAAW,GAAG,SAAS,CAAC;AAC7B,eAAO,CAAC,YAAY,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;OAChD;;;aACS,sBAAG;AACX,eAAO,CAAC,CAAE,IAAI,CAAC,GAAG,EAAE,CAAC,GAAG,AAAC,CAAC;OAC3B;;;WArBG,WAAW;;;AAwBjB,SAAO,IAAI,WAAW,EAAE,CAAC;CAC1B,CAAC,CAAC,CAAC;;;;;;;AC1BN,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC;;CAErB,OAAO,CAAC,cAAc,EAAE,YAAY,CAAC,CAAC;;;;AAIzC,YAAY,CAAC,OAAO,GAAG,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;AAC7C,SAAS,YAAY,CAAC,KAAK,EAAE,QAAQ,EAAE;;AAErC,MAAI,OAAO,GAAG,IAAI,CAAC;;AAEnB,SAAO,CAAC,KAAK,GAAG,EAAE,CAAC;;;AAGnB,SAAO,CAAC,KAAK,GAAG,UAAS,SAAS,EAAE,OAAO,EAAE;;;AAG3C,WAAO,KAAK,CAAC,GAAG,CAAC,QAAQ,GAAG,OAAO,CAAC;;KAEjC,IAAI;;AAEH,cAAS,QAAQ,EAAE;AACjB,aAAO,CAAC,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC;AAC9B,UAAI,SAAS,EAAE;;AAEb,iBAAS,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;OAC1B;KACF;;AAED,cAAS,QAAQ,EAAE;;AAEjB,UAAI,OAAO,EAAE;;AAEX,eAAO,EAAE,CAAC;OACX;KACF,CAAC,CAAC;GACR,CAAC;;AAEF,SAAO,CAAC,GAAG,GAAG,YAAW;AACrB,WAAO,OAAO,CAAC,KAAK,CAAC;GACxB,CAAC;;AAEF,SAAO,CAAC,QAAQ,GAAG,UAAS,MAAM,EAAE;;AAElC,SAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC7C,UAAI,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,MAAM,EAAE;;AAEnC,eAAO,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;;;OAGvC;KACF;AACD,WAAO,EAAE,CAAC;GACX,CAAC;;AAEF,SAAO,CAAC,MAAM,GAAG,UAAS,IAAI,EAAE;;AAE9B,QAAI,OAAO,GAAG,KAAK,CAAC,IAAI,CAAC,QAAQ,GAAG,OAAO,EAAE;AAC3C,UAAI,EAAE,IAAI;KACX,CAAC,CAAC;;AAEH,WAAO,CAAC,IAAI,CAAC,UAAS,QAAQ,EAAE;;AAE9B,aAAO,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC1C,aAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;KACvC,CAAC,CAAC;;AAEH,WAAO,OAAO,CAAC;GAChB,CAAC;;AAEF,SAAO,CAAC,MAAM,GAAG,UAAS,IAAI,EAAE;;AAE9B,QAAI,OAAO,GAAG,KAAK,CAAC,GAAG,CAAC,QAAQ,GAAG,QAAQ,GAAG,IAAI,CAAC,GAAG,EAAE;;AAEtD,UAAI,EAAE;AACJ,aAAK,EAAE,IAAI,CAAC,KAAK;AACjB,iBAAS,EAAE,IAAI,CAAC,SAAS;OAC1B;KACF,CAAC,CAAC;;AAEH,WAAO,CAAC,IAAI,CAAC,UAAS,QAAQ,EAAE;;AAE9B,aAAO,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACxC,aAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;KACvC,CAAC,CAAC;;AAEH,WAAO,OAAO,CAAC;GAChB,CAAC;;AAEF,SAAO,UAAO,GAAG,UAAS,IAAI,EAAE;;AAE9B,QAAI,OAAO,GAAG,KAAK,UAAO,CAAC,QAAQ,GAAG,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;;AAE3D,WAAO,CAAC,IAAI,CAAC,UAAS,QAAQ,EAAE;;AAE9B,aAAO,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;AACzB,aAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;KACvC,CAAC,CAAC;;AAEH,WAAO,OAAO,CAAC;GAChB,CAAC;;AAEF,SAAO,CAAC,WAAW,GAAG,UAAS,IAAI,EAAE;AACnC,SAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC7C,UAAI,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,IAAI,CAAC,GAAG,EAAE;AACrC,eAAO,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;OACzB;KACF;GACF,CAAC;;AAEF,SAAO,CAAC,UAAU,GAAG,UAAS,IAAI,EAAE;AAClC,SAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC7C,UAAI,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,IAAI,CAAC,GAAG,EAAE;;AAErC,eAAO,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;OAC5B;KACF;GACF,CAAC;CACH;;;;;;;;ACzHD,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC;;CAErB,OAAO,CAAC,cAAc,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,WAAW,EAAE,aAAa,EAChF,UAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE,WAAW,EAAK;MAC9C,YAAY;aAAZ,YAAY;4BAAZ,YAAY;;;;;iBAAZ,YAAY;;;;aAEV,gBAAC,IAAI,EAAE;;AAEX,YAAI,OAAO,GAAG,KAAK,CAAC,IAAI,CAAI,QAAQ,YAAS;AAC3C,cAAI,EAAE,IAAI;SACX,CAAC,CAAC;;AAEH,eAAO,CAAC,IAAI,CAAC,UAAC,QAAQ,EAAK;;AAEzB,mBAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;;AAExC,qBAAW,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACrC,CAAC,CAAC;;AAEH,eAAO,OAAO,CAAC;OAChB;;;;;aAEI,eAAC,IAAI,EAAE;;AAEV,YAAI,OAAO,GAAG,KAAK,CAAC,IAAI,CAAI,QAAQ,eAAY;AAC9C,cAAI,EAAE,IAAI;SACX,CAAC,CAAC;;AAEH,eAAO,CAAC,IAAI;;AAEV,kBAAC,QAAQ,EAAK;;AAEZ,mBAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;;AAExC,qBAAW,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACrC;;AAED,kBAAC,QAAQ,EAAK;AACZ,eAAK,CAAC,MAAM,CAAC,QAAQ,EAAE,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SAC/C,CACF,CAAC;;AAEF,eAAO,OAAO,CAAC;OAChB;;;WAvCG,YAAY;;;AA0ClB,SAAO,IAAI,YAAY,EAAE,CAAC;CAC3B,CAAC,CAAC,CAAC;;;AChDN,CAAC,YAAW;AACV,SAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,CACrB,MAAM,CAAC,WAAW,CAAC,CAAC;;AAEvB,aAAW,CAAC,OAAO,GAAG,CAAC,gBAAgB,CAAC,CAAC;AACzC,WAAS,WAAW,CAAC,cAAc,EAAE;AACnC,kBAAc,CACX,KAAK,CAAC,SAAS,EAAE;AAChB,SAAG,EAAE,UAAU;;AAEf,cAAQ,EAAE,qBAAqB;KAChC,CAAC,CACD,KAAK,CAAC,SAAS,EAAE;AAChB,SAAG,EAAE,UAAU;AACf,cAAQ,EAAE,qBAAqB;KAChC,CAAC,CACD,KAAK,CAAC,SAAS,EAAE;AAChB,SAAG,EAAE,UAAU;AACf,gBAAU,EAAE,CAAC,QAAQ,EAAE,WAAW,EAAE,aAAa,EAC/C,UAAS,MAAM,EAAE,SAAS,EAAE,WAAW,EAAE;AACvC,iBAAS,CAAC,KAAK,EAAE,CAAC;AAClB,mBAAW,CAAC,KAAK,EAAE,CAAC;AACpB,cAAM,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC;OACtB,CAAC;KACL,CAAC,CAAC;GACN,CAAC;CACH,CAAA,EAAG,CAAC","file":"bundle.js","sourcesContent":["// IFFE for our notely application.\n(function() {\n  // Inject dependancy for ui.router into the notely application / module.\n  // ** Array of other modules to include.\n  var app = angular.module('notely', [\n    'ui.router',\n    'notely.notes',\n    'flash'\n  ]);\n\n  function config($urlRouterProvider) {\n    // If request does not find a valid page, route to '/notes'\n    $urlRouterProvider.otherwise('/notes/');\n  }\n\n  config['$inject'] = ['$urlRouterProvider'];\n  app.config(config);\n  // Add an API_BASE constant to the app to represent the main server url.\n  app.constant('API_BASE', 'http://localhost:3000/api/v1/');\n// Invoke the function.\n})();\n","angular.module('notely')\r\n  // Always declare directives using camelCase. The directive in mark up will be 'dasherized'.\r\n  .directive('signIn', ['$state', 'UsersService', ($state, UsersService) => {\r\n\r\n    // Declare the controller as an ES6 class.\r\n    class SignInController {\r\n      constructor() {\r\n        this.user = {};\r\n      }\r\n      login() {\r\n        // Get the user, login.\r\n        UsersService.login(this.user)\r\n          .then(\r\n            function(response) {\r\n              // success\r\n              $state.go('notes.form', { noteId: response.data.user._id });\r\n            },\r\n            function(response) {\r\n              // failure\r\n              console.log('failure :(');\r\n            });\r\n      }\r\n    }\r\n\r\n    // Definte the behavior of the directive.\r\n    return {\r\n      // Give each instance of the directive its own scope.\r\n      scope: {},\r\n      controller: SignInController,\r\n      // Inside the directive's view, we can refer to the controller as 'ctrl'.\r\n      controllerAs: 'ctrl',\r\n      // Isolates the scope defined here.\r\n      bindToController: true,\r\n      templateUrl: '/components/sign-in.html'\r\n    };\r\n  }]);\r\n","angular.module('notely')\r\n  // Always declare directives using camelCase. The directive in mark up will be 'dasherized'.\r\n  .directive('signUp', ['$state', 'UsersService', ($state, UsersService) => {\r\n\r\n    // Declare the controller as an ES6 class.\r\n    class SignUpController {\r\n      constructor() {\r\n        this.user = {};\r\n      }\r\n      submit() {\r\n        // Create the user.\r\n        UsersService.create(this.user)\r\n          .then(\r\n            function(response) {\r\n              // success\r\n              $state.go('notes.form', { noteId: undefined });\r\n            },\r\n            function(response) {\r\n              // failure\r\n              console.log('failure :(');\r\n            });\r\n      }\r\n    }\r\n\r\n    // Definte the behavior of the directive.\r\n    return {\r\n      // Give each instance of the directive its own scope.\r\n      scope: {},\r\n      controller: SignUpController,\r\n      // Inside the directive's view, we can refer to the controller as 'ctrl'.\r\n      controllerAs: 'ctrl',\r\n      // Isolates the scope defined here.\r\n      bindToController: true,\r\n      templateUrl: '/components/sign-up.html'\r\n    };\r\n  }]);\r\n","angular.module('notely')\r\n  // Always declare directives using camelCase. The directive in mark up will be 'dasherized'.\r\n  .directive('userLinks', () => {\r\n    // Declare the controller as an ES6 class.\r\n    class UserLinksController {\r\n      constructor(AuthToken, CurrentUser) {\r\n        this.AuthToken = AuthToken;\r\n        this.CurrentUser = CurrentUser;\r\n      };\r\n      user() {\r\n        return this.CurrentUser.get();\r\n      };\r\n      signedIn() {\r\n        return !!(this.user()._id);\r\n      };\r\n    }\r\n    UserLinksController.$inject = ['AuthToken', 'CurrentUser'];\r\n\r\n    // Definte the behavior of the directive.\r\n    return {\r\n      // Give each instance of the directive its own scope.\r\n      scope: {},\r\n      controller: UserLinksController,\r\n      // Inside the directive's view, we can refer to the controller as 'ctrl'.\r\n      controllerAs: 'ctrl',\r\n      // Isolates the scope defined here.\r\n      bindToController: true,\r\n      //templateUrl: '/components/user-links.html'\r\n      template: `\r\n        <div class=\"user-links\">\r\n          <div ng-show=\"ctrl.signedIn()\">\r\n            Signed in as {{ctrl.user().username}}\r\n            |\r\n            <a href=\"#\" ui-sref=\"log-out\">Logout</a>\r\n          </div>\r\n          <div ng-show=\"!ctrl.signedIn()\">\r\n            <a href=\"#\" ui-sref=\"sign-in\">Login</a>\r\n            |\r\n            <a href=\"#\" ui-sref=\"sign-up\">Create Account</a>\r\n          </div>\r\n        </div>\r\n      `\r\n    };\r\n  });\r\n","// Create IIFE for the Notes page.\n(function() {\n  // Add a notes module to the main notely module.\n  angular.module('notely.notes', [\n    'ui.router',\n    'textAngular',\n    'flash'\n  ])\n    // Configure the controller.\n    .config(notesConfig);\n    // Assign array of all things to be injected into the notesConfig function.\n    // ** Do this to allow minification of our .js\n    notesConfig.$inject = ['$stateProvider'];\n    // Configure the notes controller.\n    function notesConfig($stateProvider) {\n      $stateProvider\n        // State is similar to a URL / Page / Route\n        // Notes - #/notes\n        .state('notes', {\n          url: '/notes',\n          // Provide a function to run before the controller is loaded.\n          // If any of the functions in 'resolve' returns a promise, that promise must be resolved before continuing on.\n          resolve: {\n            // Define the action to complete before continuing on to the Controller.\n            // Inject arguments into the function using array annotation.\n            notesLoaded: ['$state', '$q', '$timeout', 'NotesService', 'CurrentUser',\n              // Add authentication to the /notes root.\n              // $q is an angular service, used to return custom promises.\n              // **REMEMBER: Anything that calls a function that returns a promise can have .then(). <-- asynchronous.\n              function($state, $q, $timeout, NotesService, CurrentUser) {\n                // Get the deferred API.\n                let deferred = $q.defer();\n                $timeout(function() {\n                  // User must be signed in.\n                  if (CurrentUser.isSignedIn()) {\n                    // Get all notes.\n                    NotesService.fetch().then(\n                      function() {\n                        // Success, resolve the promise.\n                        // Basically, flags the .then(success) to be get called after return.\n                        deferred.resolve();\n                      },\n                      function() {\n                        // Failed, reject the promise.\n                        // Basically, flags the .then(error) to get called after return.\n                        deferred.reject();\n                        $state.go('sign-in');\n                      }\n                    );\n                  }\n                  else {\n                    // Failed, reject the promise.\n                    deferred.reject();\n                    $state.go('sign-in');\n                  }\n                });\n                // Send the promise back to calling function.\n                return deferred.promise;\n              }]\n          },\n          // Template replaces contents of the object containing the ui-view attribute.\n          templateUrl: '/notes/notes.html',\n          // Set the controller for this state.\n          controller: NotesController\n        })\n        // Create a child-state for the notes form.\n        .state('notes.form', {\n          // Use /: to define parameters.\n          url: '/:noteId',\n          templateUrl: '/notes/notes-form.html',\n          controller: NotesFormController\n        })\n    }\n\n    // Define the NotesController\n    NotesController.$inject = ['$state', '$scope', 'NotesService'];\n    function NotesController($state, $scope, NotesService) {\n      $scope.note = {};\n      // Callback function should get the result of the async service method.\n      // Set a $scope vairable to the result;\n      $scope.notes = NotesService.get();\n    }\n\n    // Create the NotesFormController\n    NotesFormController.$inject = ['$scope', '$state', 'Flash', 'NotesService'];\n    function NotesFormController($scope, $state, Flash, NotesService) {\n      // Use the $state.params to get all params declared in the .state definitions.\n      $scope.note = NotesService.findById($state.params.noteId);\n\n      // Create a function used to save the model.\n      $scope.save = function() {\n          // Decide whether to call create or update.\n          if ($scope.note._id) {\n            // Update an existing note.\n            NotesService.update($scope.note).then(\n              function(response) {\n                // Reset the $scope.note so we have the scrubbed body_html.\n                $scope.note = angular.copy(response.data.note);\n                Flash.create('success', response.data.message);\n              },\n              function(response) {\n                Flash.create('danger', response.data.message);\n              }\n            );\n          }\n          else {\n            if ($scope.note.title && $scope.note.body_html) {\n              // Create the note.\n              NotesService.create($scope.note)\n                .then(function(response) {\n                  $state.go('notes.form', { noteId: response.data.note._id });\n                });\n            }\n            else {\n              console.log('cannot save note!');\n            }\n          }\n      };\n\n      $scope.delete = function() {\n        // Delete the note.\n        NotesService.delete($scope.note).then(\n          function(response) {\n            $state.go('notes.form', { noteId: undefined });\n            Flash.create('success', response.data.message);\n          },\n          function(response) {\n            Flash.create('danger', response.data.message);\n          }\n        );\n      };\n\n      $scope.buttonText = function() {\n        return $scope.note._id ? 'Save Changes' : 'Save';\n      };\n    }\n\n// Invoke the function.\n})();\n","angular.module('notely')\r\n  .factory('AuthInterceptor', ['AuthToken', 'API_BASE',\r\n    function(AuthToken, API_BASE) {\r\n      return {\r\n        // Create a function for this as a request interceptor.\r\n        request: function(config) {\r\n          var token = AuthToken.get();\r\n          console.log(token);\r\n          console.log(config.url);\r\n          if (token && config.url.indexOf(API_BASE) > -1) {\r\n            config.headers['Authorization'] = token;\r\n          }\r\n          return config;\r\n        }\r\n      };\r\n    }]);\r\n\r\nangular.module('notely')\r\n  // Instruct config to use AuthInterceptor as an interceptor.\r\n  .config(['$httpProvider', function($httpProvider) {\r\n    // Add the AuthInterceptor to the array of interceptors.\r\n    return $httpProvider.interceptors.push('AuthInterceptor');\r\n  }]);\r\n","angular.module('notely')\r\n  // Create a new service for auth_token.\r\n  // Pass in the current $window\r\n  .service('AuthToken', ['$window', ($window) => {\r\n\r\n    class AuthToken {\r\n      constructor() {\r\n        // Get the authToken from local storage, if it exists.\r\n        this.authToken = $window.localStorage.getItem('authToken');\r\n      }\r\n      // Set the authToken attribute and the local storage item.\r\n      set(token) {\r\n        this.authToken = token;\r\n        $window.localStorage.setItem('authToken', this.authToken);\r\n      }\r\n      // Get the authToken attribute.\r\n      get() {\r\n        return this.authToken || {};\r\n      }\r\n      // Clear the authToken attribute and the local storage item.\r\n      clear() {\r\n        this.authToken = undefined;\r\n        $window.localStorage.removeItem('authToken');\r\n      }\r\n    }\r\n    // Return an instance of the service.\r\n    return new AuthToken();\r\n  }]);\r\n","angular.module('notely')\r\n  // Create a new service for auth_token.\r\n  // Pass in the current $window\r\n  .service('CurrentUser', ['$window', ($window) => {\r\n\r\n    class CurrentUser {\r\n      constructor() {\r\n        // Get the authToken from local storage, if it exists.\r\n        this.currentUser = JSON.parse($window.localStorage.getItem('currentUser'));\r\n      }\r\n      // Set the authToken attribute and the local storage item.\r\n      set(user) {\r\n        this.currentUser = user;\r\n        $window.localStorage.setItem('currentUser', JSON.stringify(this.currentUser));\r\n      }\r\n      // Get the authToken attribute.\r\n      get() {\r\n        return this.currentUser || {};\r\n      }\r\n      // Clear the authToken attribute and the local storage item.\r\n      clear() {\r\n        this.currentUser = undefined;\r\n        $window.localStorage.removeItem('currentUser');\r\n      }\r\n      isSignedIn() {\r\n        return !!(this.get()._id);\r\n      }\r\n    }\r\n    // Return an instance of the service.\r\n    return new CurrentUser();\r\n  }]);\r\n","// Create a service.js to communicate with the server.\r\n// This can be used by multiple controllers to CRUD data.\r\n\r\n// Use the existing main module.\r\nangular.module('notely')\r\n  // Add a service to the main module.\r\n  .service('NotesService', NotesService);\r\n\r\n// Create the service [function].\r\n// Inject Dependencies\r\nNotesService.$inject = ['$http', 'API_BASE'];\r\nfunction NotesService($http, API_BASE) {\r\n  // Create a variable to represent the NotesService, since the meaning of 'this' will change.\r\n  var service = this;\r\n  // Create a placeholder for all of our notes.\r\n  service.notes = [];\r\n  // Create a function to fetch data from the server.\r\n  // Add a callback parameter: function to run on success.\r\n  service.fetch = function(onSuccess, onError) {\r\n    // Send an $http get request (promise) to the specified URL.\r\n    // Return the request promise.\r\n    return $http.get(API_BASE + 'notes')\r\n      // Create a function to handle the $http response.\r\n      .then(\r\n        // Success callback.\r\n        function(response) {\r\n          service.notes = response.data;\r\n          if (onSuccess) {\r\n            // If there is a callback action provided, call it and return the result.\r\n            onSuccess(service.notes);\r\n          }\r\n        },\r\n        // Failure callback\r\n        function(response) {\r\n          // TODO: Handle error.\r\n          if (onError) {\r\n            // If there is a callback action provided, call it.\r\n            onError();\r\n          }\r\n        });\r\n  };\r\n  // Create a method to return the NotesService notes array.\r\n  service.get = function() {\r\n      return service.notes;\r\n  };\r\n  // Create a method to return a single note by searching by id.\r\n  service.findById = function(noteId) {\r\n    // Find the note in service.notes with a matching _id.\r\n    for (var i = 0; i < service.notes.length; i++) {\r\n      if (service.notes[i]._id === noteId) {\r\n        // Use angular to return a copy of the object.\r\n        return angular.copy(service.notes[i]);\r\n        // Use JSON to return a copy of the object.\r\n        //return JSON.parse(JSON.stringify(service.notes[i]));\r\n      }\r\n    }\r\n    return {};\r\n  };\r\n  // Create a method to save the note to the collection.\r\n  service.create = function(note) {\r\n    // Get the promise to return.\r\n    var promise = $http.post(API_BASE + 'notes', {\r\n      note: note\r\n    });\r\n    // Do work with the promise in the service.\r\n    promise.then(function(response) {\r\n      // Add the saved note to the top of the array.\r\n      service.notes.unshift(response.data.note);\r\n      console.log('Note has been created!');\r\n    });\r\n    // Return the promise.\r\n    return promise;\r\n  };\r\n  // Create a method to update an existing note.\r\n  service.update = function(note) {\r\n    // Get the promise to return.\r\n    var promise = $http.put(API_BASE + 'notes/' + note._id, {\r\n      // Only specify fields that can be updated from the client side.\r\n      note: {\r\n        title: note.title,\r\n        body_html: note.body_html\r\n      }\r\n    });\r\n    // Do work with the promise in the service.\r\n    promise.then(function(response) {\r\n      // Replace the saved note in the array.\r\n      service.replaceNote(response.data.note);\r\n      console.log('Note has been updated!');\r\n    });\r\n    // Return the promise.\r\n    return promise;\r\n  };\r\n  // Create a method to delete an existing note.\r\n  service.delete = function(note) {\r\n    // Delete the note.\r\n    var promise = $http.delete(API_BASE + 'notes/' + note._id);\r\n    // Do work with the promise in the service.\r\n    promise.then(function(response) {\r\n      // Remove the deleted note from the array.\r\n      service.removeNote(note);\r\n      console.log('Note has been deleted!');\r\n    });\r\n    // Return the promise.\r\n    return promise;\r\n  };\r\n  // Replace a note in the array.\r\n  service.replaceNote = function(note) {\r\n    for (var i = 0; i < service.notes.length; i++) {\r\n      if (service.notes[i]._id === note._id) {\r\n        service.notes[i] = note;\r\n      }\r\n    }\r\n  };\r\n  // Remove a note from the array.\r\n  service.removeNote = function(note) {\r\n    for (var i = 0; i < service.notes.length; i++) {\r\n      if (service.notes[i]._id === note._id) {\r\n        // Remove the array item at the provided index.\r\n        service.notes.splice(i, 1);\r\n      }\r\n    }\r\n  };\r\n}\r\n","// Use the existing notely module.\r\nangular.module('notely')\r\n  // Create a new service, inject the dependencies.\r\n  .service('UsersService', ['$http', 'Flash', 'API_BASE', 'AuthToken', 'CurrentUser',\r\n    ($http, Flash, API_BASE, AuthToken, CurrentUser) => {\r\n    class UsersService {\r\n      // Create a user.\r\n      create(user) {\r\n        // Get the promise to return.\r\n        let promise = $http.post(`${API_BASE}users`, {\r\n          user: user\r\n        });\r\n        // Do work with the promise in the service.\r\n        promise.then((response) => {\r\n          // Set the AuthToken\r\n          AuthToken.set(response.data.auth_token);\r\n          // Set the currentUser.\r\n          CurrentUser.set(response.data.user);\r\n        });\r\n        // Return the promise.\r\n        return promise;\r\n      };\r\n      // Get a user, login.\r\n      login(user) {\r\n        // Get the promise to return.\r\n        let promise = $http.post(`${API_BASE}sessions`, {\r\n          user: user\r\n        });\r\n        // Do work with the promise in the service.\r\n        promise.then(\r\n          // Success.\r\n          (response) => {\r\n            // Set the AuthToken\r\n            AuthToken.set(response.data.auth_token);\r\n            // Set the currentUser.\r\n            CurrentUser.set(response.data.user);\r\n          },\r\n          // Error.\r\n          (response) => {\r\n            Flash.create('danger', response.data.message);\r\n          }\r\n        );\r\n        // Return the promise.\r\n        return promise;\r\n      }\r\n    }\r\n    // Return an instance of the service class.\r\n    return new UsersService();\r\n  }]);\r\n","(function() {\r\n  angular.module('notely')\r\n    .config(usersConfig);\r\n\r\n  usersConfig.$inject = ['$stateProvider'];\r\n  function usersConfig($stateProvider) {\r\n    $stateProvider\r\n      .state('sign-up', {\r\n        url: '/sign-up',\r\n        // Use a directive we have defined ourselves.\r\n        template: '<sign-up></sign-up>'\r\n      })\r\n      .state('sign-in', {\r\n        url: '/sign-in',\r\n        template: '<sign-in></sign-in>'\r\n      })\r\n      .state('log-out', {\r\n        url: '/log-out',\r\n        controller: ['$state', 'AuthToken', 'CurrentUser',\r\n          function($state, AuthToken, CurrentUser) {\r\n            AuthToken.clear();\r\n            CurrentUser.clear();\r\n            $state.go('sign-in');\r\n          }]\r\n      });\r\n  };\r\n})();\r\n"],"sourceRoot":"/source/"}